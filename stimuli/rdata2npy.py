
import os
import numpy as np
import rpy2.robjects as robjects

#%%
def rdata2npy(rdata, patch = False):
    """
    Convert the Rdata files which were generated by rcicr from rdata format to npy format.

    :param rdata: the Rdata file. log file after generating stimuli using rcicr package.
    :param patch: bool. Determine the need to output a patch file
    :return stimuli_parameter: Parameters used when generating stimuli.
            patches,pathidx: patch template when generating stimuli.

    """
    robjects.r['load'](rdata)
    stimuli_parameter = np.array(robjects.r['stimuli_params'][0])
    if patch == True:
        patch = robjects.r['p']
        patches = patch[0]
        patchidx = patch[1]
        return stimuli_parameter,patches,patchidx
    else:
        return stimuli_parameter
#%%

if __name__ == '__main__':
    for i in range(1, 21):
        rdata = r"D:\cnnface\gender_analysis\supplementray_analysis\noise_stimuli\metadata/part{}.Rdata".format(i)
        params_part = rdata2npy(rdata)
        if i == 1:
            params_20000 = params_part
        else:
            params_20000 = np.concatenate((params_20000, params_part), axis=0)
    np.save(r'D:\cnnface\gender_analysis\supplementray_analysis\noise_stimuli\metadata/alexnet_params_20000.npy', params_20000)

    #%%
    rdata = r'D:\cnnface\val_analysis\noiseface\gabor_part1/rcic_seed_1_time_6æœˆ_09_2020_00_37.Rdata'
    param,patches, patchidx = rdata2npy(rdata,True)
    np.save(r'D:\cnnface\Data_sorted\commonData/gabor2_patches.npy',patches)
    np.save(r'D:\cnnface\Data_sorted\commonData/gabor2_patchidx.npy',patchidx)

    #%%
    import matplotlib.pyplot as plt
    rdata ='D:/cnnface/gender_analysis/noise_stimulus/metadata/gabor.Rdata'
    robjects.r['load'](rdata)
    gabor = np.array(robjects.r['gabor'])

    plt.imshow(gabor,'gray')
    plt.show()